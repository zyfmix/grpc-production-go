// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = ".;helloworld";
option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";

package helloworld;

// 这里导入的annotations.proto文件在$GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api目录下，在安装grpc-gateway的go库的目录
import "google/api/annotations.proto";

// The greeting service definition.
service Greeter {
  // 一元RPC
  //rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      post: "/v1/sayHello"
      body: "*"
    };
  }
  // 服务端流式RPC
  rpc SayList (HelloRequest) returns (stream HelloReply) {}
  // 客户端流式RPC
  rpc SayRecord (stream HelloRequest) returns (HelloReply) {}
  // 双向流式RPC
  rpc SayRoute (stream HelloRequest) returns (stream HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}